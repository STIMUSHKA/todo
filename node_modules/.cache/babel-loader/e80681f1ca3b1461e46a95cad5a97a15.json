{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xaere\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\stuff\\\\react_yt\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = React.useState([{\n    id: 1,\n    completed: true,\n    title: 'buy bread'\n  }, {\n    id: 2,\n    completed: false,\n    title: 'buy butter'\n  }, {\n    id: 3,\n    completed: false,\n    title: 'buy milk'\n  }]);\n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      removeTodo\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React tutorial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onToggle: toggleTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wdgVTRI978c+sqrVp68e8lgT3p4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/xaere/OneDrive/Рабочий стол/stuff/react_yt/src/App.js"],"names":["React","TodoList","Context","App","todos","setTodos","useState","id","completed","title","toggleTodo","map","todo","removeTodo","filter"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAC1B,CACE;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,SAAS,EAAC,IAAjB;AAAuBC,IAAAA,KAAK,EAAC;AAA7B,GADF,EAEE;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,SAAS,EAAC,KAAjB;AAAwBC,IAAAA,KAAK,EAAC;AAA9B,GAFF,EAGE;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,SAAS,EAAC,KAAjB;AAAwBC,IAAAA,KAAK,EAAC;AAA9B,GAHF,CAD0B,CAA1B;;AAOA,WAASC,UAAT,CAAoBH,EAApB,EAAwB;AACtBF,IAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI;AAChB,UAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAClBK,QAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACD;;AACH,aAAOI,IAAP;AACC,KALD,CADM,CAAR;AAQD;;AAED,WAASC,UAAT,CAAoBN,EAApB,EAAwB;AACtBF,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD;;AAED,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAAzB;AAAA,2BACD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGG,QAAC,QAAD;AACA,QAAA,KAAK,EAAET,KADP;AAEA,QAAA,QAAQ,EAAEM;AAFV;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnCQP,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\n\nfunction App() {\n  const [todos, setTodos] = React.useState(\n  [\n    {id:1, completed:true, title:'buy bread'},\n    {id:2, completed:false, title:'buy butter'},\n    {id:3, completed:false, title:'buy milk'}  \n  ])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n      return todo\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }} >\n   <div className=\"wrapper\">\n     <h1>React tutorial</h1>\n\n      <TodoList \n      todos={todos}\n      onToggle={toggleTodo}\n      />\n   </div> \n   </Context.Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}