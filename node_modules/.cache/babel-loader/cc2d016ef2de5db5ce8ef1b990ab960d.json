{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xaere\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\stuff\\\\react_yt\\\\src\\\\Todo\\\\AddTodo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useInputValue(defaultValue = '') {\n  _s();\n\n  const [value, setValue] = useState(defaultValue);\n  return {\n    bind: {\n      value,\n      onChange: event => setValue(event.target.value)\n    },\n    clear: () => setValue(''),\n    value: () => value\n  };\n}\n\n_s(useInputValue, \"+di++irDcPspjmhJVP9frUKGzpo=\");\n\nfunction AddTodo({\n  onCreate\n}) {\n  _s2();\n\n  const input = useInputValue('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (input.value().trim()) {\n      onCreate(input.value);\n      console.log('input.value: ', input.value);\n      input.clear();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      color: 'red',\n      marginBottom: '1rem'\n    },\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AddTodo, \"NZ+WeIGrbcYV45Uqo4xtJO8OcM0=\", false, function () {\n  return [useInputValue];\n});\n\n_c = AddTodo;\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["C:/Users/xaere/OneDrive/Рабочий стол/stuff/react_yt/src/Todo/AddTodo.js"],"names":["React","useState","PropTypes","useInputValue","defaultValue","value","setValue","bind","onChange","event","target","clear","AddTodo","onCreate","input","submitHandler","preventDefault","trim","console","log","color","marginBottom","propTypes","func","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,aAAT,CAAuBC,YAAY,GAAG,EAAtC,EAAyC;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,YAAD,CAAlC;AAEA,SAAO;AACHG,IAAAA,IAAI,EAAE;AACFF,MAAAA,KADE;AAEFG,MAAAA,QAAQ,EAAEC,KAAK,IAAIH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd;AAFzB,KADH;AAKHM,IAAAA,KAAK,EAAE,MAAML,QAAQ,CAAC,EAAD,CALlB;AAMHD,IAAAA,KAAK,EAAE,MAAMA;AANV,GAAP;AASH;;GAZQF,a;;AAcT,SAASS,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA+B;AAAA;;AAC3B,QAAMC,KAAK,GAAGX,aAAa,CAAC,EAAD,CAA3B;;AAEA,WAASY,aAAT,CAAuBN,KAAvB,EAA8B;AAC1BA,IAAAA,KAAK,CAACO,cAAN;;AAEA,QAAGF,KAAK,CAACT,KAAN,GAAcY,IAAd,EAAH,EAAyB;AACrBJ,MAAAA,QAAQ,CAACC,KAAK,CAACT,KAAP,CAAR;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,KAAK,CAACT,KAAnC;AACAS,MAAAA,KAAK,CAACH,KAAN;AACH;AACJ;;AAED,sBACI;AAAM,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAK,EAAE,KAAR;AAAeC,MAAAA,YAAY,EAAE;AAA7B,KAAb;AAAmD,IAAA,QAAQ,EAAEN,aAA7D;AAAA,4BACI,sBAAWD,KAAK,CAACP;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;IAnBQK,O;UACST,a;;;KADTS,O;AAqBTA,OAAO,CAACU,SAAR,GAAoB;AAChBT,EAAAA,QAAQ,EAAEX,SAAS,CAACqB,IAAV,CAAeC;AADT,CAApB;AAIA,eAAeZ,OAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction useInputValue(defaultValue = ''){\r\n    const [value, setValue] = useState(defaultValue);\r\n\r\n    return {\r\n        bind: {\r\n            value,\r\n            onChange: event => setValue(event.target.value)\r\n        },\r\n        clear: () => setValue(''),\r\n        value: () => value, \r\n\r\n    }\r\n}\r\n\r\nfunction AddTodo({ onCreate }) {\r\n    const input = useInputValue('');\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n\r\n        if(input.value().trim()) {\r\n            onCreate(input.value);\r\n            console.log('input.value: ', input.value);\r\n            input.clear()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form style={{color: 'red', marginBottom: '1rem'}} onSubmit={submitHandler}>\r\n            <input {...input.bind} />\r\n            <button type=\"submit\" >Add todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}